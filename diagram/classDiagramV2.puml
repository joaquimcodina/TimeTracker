@startuml
skinparam classAttributeIconSize 0

title "Time Tracker"

class User {
# usage : temps
+{static} main()
}

class Task extends CompositeClass{
 intervals : ArrayList<Interval>

+ initTask()
+ endTask()
}

class Project extends CompositeClass {
- objects : ArrayList<User>
+ addObject(obj : Task) //CHANGE TO TASK IN CLASS
+ addProject(obj : Project) //TODO
}

package "Observer_Pattern" #DDDDDD{
    Observable o--> Observer : observers *
}

abstract class Observable{
+ addObserver(ob: Observer)
+ deleteObserver(ob: Observer)
+setChanged()
+notifyObservers(arg0: Observable, arg1: Object)
}

interface Observer{
+update(arg0: Observable, arg1: Object)
}

class ClockTimer{
- timer : ClockTimer
- dateTime : DateTime
+ startTimer()
+ tick()
}

abstract class CompositeClass{
- name : String
+ getName() : String
}

class Interval {
- first : LocalDateTime
- second : LocalDateTime

+ Interval()
+ setSecond()
+ getIntervalTime() : int
+ getInitialDate() : LocalDateTime
+ getFinalDate() : LocalDateTime
}


User *--> CompositeClass
'Project "1"-left-"0..*" Project
CompositeClass <--* Project
Task "1"--"0..*" Interval
ClockTimer --|> "*" Observable
Interval ..|> Observer

@enduml