@startuml
skinparam classAttributeIconSize 0

title "Time Tracker"

abstract class user {
# usage : temps
}

class Task{
- intervals : ArrayList<Interval>

+ initTask()
+ endTask()
}

class Project {
- objects : ArrayList<user>

+ addObject(obj : Task) //CHANGE TO TASK IN CLASS
+ addProject(obj : Project) //TODO
}

package "Observer_Pattern" #DDDDDD{
    Observable o--|> Observer : observers *
}

abstract class Observable{
+ addObserver(ob: Observer)
+ deleteObserver(ob: Observer)
+setChanged()
+notifyObservers(arg0: Observable, arg1: Object)
}

interface Observer{
+update(arg0: Observable, arg1: Object)
}

class ClockTimer{
- tiemr: ClockTimer
- dateTime : DateTime
+ startTimer()
+ tick()
}

class Interval {
- first : LocalDateTime
- second : LocalDateTime

+ Interval()
+ setSecond()
+ getIntervalTime() : int
+ getInitialDate() : LocalDateTime
+ getFinalDate() : LocalDateTime
}


Task "1..*"-up-"1" Project
Project "1..*"-up-"1" user
Project "1"-left-"1..*" Project
Task "1"*--"1..*" Interval
ClockTimer --|> "*" Observable
Interval ..|> Observer


@enduml
